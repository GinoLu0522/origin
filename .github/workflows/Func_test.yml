name: .NET Core Desktop CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
    paths:
      - 'server/WebServer/**'
  pull_request:
    branches:
      - master
    paths:
      - 'server/WebServer/**'

env:
  CODE_ROOT: server/WebServer
  SOLUTION_NAME: WebServer.sln
  WAP_DIR: WebServer.Package
  BUILD_CONFIG: Release

jobs:
  validate:
    runs-on: windows-latest
    outputs:
      wap_exists: ${{ steps.check-wap.outputs.exists }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate project structure
        id: check-wap
        run: |
          $solutionPath = Join-Path -Path $env:CODE_ROOT -ChildPath $env:SOLUTION_NAME
          $wapProjectPath = Join-Path -Path $env:CODE_ROOT -ChildPath "$env:WAP_DIR\$env:WAP_DIR.wapproj"

          if (-not (Test-Path $solutionPath)) {
            Write-Output "::error::Solution file not found: $solutionPath"
            exit 1
          }

          if (Test-Path $wapProjectPath) {
            Write-Output "::notice::WAP project found at $wapProjectPath"
            Write-Output "exists=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Output "::warning::WAP project missing at $wapProjectPath"
            Write-Output "exists=false" >> $env:GITHUB_OUTPUT
          }

  deploy:
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: msix-package-${{ matrix.platform }}
          path: ./artifacts

      - name: Validate package
        run: |
          $package = Get-ChildItem -Path ./artifacts -Filter *.msix -Recurse | Select-Object -First 1
          if (-not $package) {
            Write-Output "::error::No MSIX package found"
            exit 1
          }
          Write-Output "Package found at: $($package.FullName)"
